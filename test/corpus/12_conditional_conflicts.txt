================================================================================
Description lists should not become conditionals
================================================================================

ifdef:: This should be a paragraph because space after colon
Term:: definition

ifdefnotablock:: another paragraph

Another:: regular description item

--------------------------------------------------------------------------------

(source_file
  (paragraph
    (text_with_inlines
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)))
  (description_list
    (description_item))
  (paragraph
    (text_with_inlines
      (text_segment)
      (text_segment)
      (text_segment)))
  (description_list
    (description_item)))

================================================================================
Paragraphs with directive-like words
================================================================================

This paragraph contains ifdef:: and ifndef:: words but
they are in the middle of sentences, not at start of lines.

The word endif:: can also appear here.

--------------------------------------------------------------------------------

(source_file
  (description_list
    (description_item))
  (paragraph
    (text_with_inlines
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)))
  (description_list
    (description_item)))

================================================================================
Malformed conditionals should be paragraphs
================================================================================

ifdef::attr[extra content after bracket]
ifndef::
ifeval::[incomplete

These look like conditionals but are malformed.

--------------------------------------------------------------------------------

(source_file
  (paragraph
    (text_with_inlines
      (inline_conditional
        (inline_ifdef
          (inline_content)))))
  (paragraph
    (text_with_inlines
      (text_segment)))
  (paragraph
    (text_with_inlines
      (text_segment)))
  (paragraph
    (text_with_inlines
      (text_segment))))

================================================================================
Mixing attributes and conditionals
================================================================================

:attr1: value1

ifdef::attr1[]
Content when attr1 is set
endif::[]

:attr2: value2

ifndef::missing[]
Content when missing is not set
endif::[]

--------------------------------------------------------------------------------

(source_file
  (attribute_entry
    (name)
    (value))
  (conditional_block
    (ifdef_block
      (ifdef_open)
      (paragraph
        (text_with_inlines
          (text_segment)))
      (endif_directive)))
  (attribute_entry
    (name)
    (value))
  (conditional_block
    (ifndef_block
      (ifndef_open)
      (paragraph
        (text_with_inlines
          (text_segment)))
      (endif_directive))))

================================================================================
Triple colons are not conditionals
================================================================================

something::: this is not a conditional
another:::word paragraph

--------------------------------------------------------------------------------

(source_file
  (paragraph
    (text_with_inlines
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)
      (text_segment)))
  (paragraph
    (text_with_inlines
      (text_segment)
      (text_segment))))

================================================================================
No targets in ifdef should still work
================================================================================

ifdef::[]
Content without specific target
endif::[]

ifndef::[]
Content for ifndef without target  
endif::[]

--------------------------------------------------------------------------------

(source_file
  (conditional_block
    (ifdef_block
      (ifdef_open)
      (paragraph
        (text_with_inlines
          (text_segment)))
      (endif_directive)))
  (conditional_block
    (ifndef_block
      (ifndef_open)
      (paragraph
        (text_with_inlines
          (text_segment)))
      (endif_directive))))

================================================================================
Conditionals with attributes inside sections
================================================================================

== Main Section

:debug: true

ifdef::debug[]
Debug information here
endif::[]

=== Subsection

ifndef::production[]
Development content
endif::[]

--------------------------------------------------------------------------------

(source_file
  (section
    (section_title
      (title))
    (attribute_entry
      (name)
      (value))
    (conditional_block
      (ifdef_block
        (ifdef_open)
        (paragraph
          (text_with_inlines
            (text_segment)))
        (endif_directive)))
    (section
      (section_title
        (title))
      (conditional_block
        (ifndef_block
          (ifndef_open)
          (paragraph
            (text_with_inlines
              (text_segment)))
          (endif_directive))))))
