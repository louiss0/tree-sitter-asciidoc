================================================================================
Basic comparison operators
================================================================================

ifeval::['{foo}' == 'bar']
Content when condition is true
endif::[]

---

(source_file
  (conditional_block
    (ifeval_block
      directive: (ifeval_open)
      content: (paragraph
        content: (text_with_inlines
          (text_segment)
          (text_segment)
          (text_segment)
          (text_segment)
          (text_segment)))
      end: (endif_directive))))

================================================================================
Numeric comparison
================================================================================

ifeval::[{count} > 5]
endif::[]

---

(source_file
  (conditional_block
    (ifeval_block
      directive: (ifeval_open)
      end: (endif_directive))))

================================================================================
Logical operators
================================================================================

ifeval::[{a} && {b}]
endif::[]

---

(source_file
  (conditional_block
    (ifeval_block
      directive: (ifeval_open)
      end: (endif_directive))))

================================================================================
Logical NOT operator
================================================================================

ifeval::[!{flag}]
endif::[]

---

(source_file
  (conditional_block
    (ifeval_block
      directive: (ifeval_open)
      end: (endif_directive))))

================================================================================
Complex arithmetic expression
================================================================================

ifeval::[{x} + {y} * 2 > 10]
endif::[]

---

(source_file
  (conditional_block
    (ifeval_block
      directive: (ifeval_open)
      end: (endif_directive))))

================================================================================
Grouped expressions with parentheses
================================================================================

ifeval::[({x} + {y}) * 2 == {result}]
endif::[]

---

(source_file
  (conditional_block
    (ifeval_block
      directive: (ifeval_open)
      end: (endif_directive))))

================================================================================
Boolean literals
================================================================================

ifeval::[true && false]
endif::[]

---

(source_file
  (conditional_block
    (ifeval_block
      directive: (ifeval_open)
      end: (endif_directive))))
